{"version":3,"sources":["components/ErrorBoundary/index.jsx","common/coin.js","components/Button/index.jsx","components/Input/index.jsx","pages/Settings/index.jsx","components/Navigation/index.jsx","pages/Wallets/WalletItem.jsx","pages/Wallets/index.jsx","components/Dropdown/index.jsx","pages/Transfer/DropdownItem.jsx","pages/Transfer/index.jsx","components/Notification/index.jsx","pages/App.jsx","common/data.js","index.jsx"],"names":["ErrorBoundary","props","state","error","this","setState","children","React","Component","Coin","Object","freeze","BTC","params","createWallet","network","mnemonic","bip39","seed","node","bip32","derivePath","account","BtcLib","p2pkh","pubkey","publicKey","balance","ticker","precision","pubKey","privKey","privateKey","address","getBalance","Promise","res","rej","restoreWallet","root","console","log","send","a","name","Button","isLoading","onClick","type","className","Input","placeholder","onChange","event","Settings","setActivePage","setWallets","setWallet","useState","showRestoreBlock","setShowRestoreBlock","showSavingTheMnemonic","setShowSavingTheMnemonic","undefined","newWallet","setNewWallet","newMnemonic","setNewMnemonic","prepareNewWallet","wallet","confirmLogout","setConfirmLogout","testnet","size","color","window","localStorage","setItem","clear","Navigation","isDark","setIsDark","activePage","page","WalletItem","walletIcon","shortAddress","isCopied","setIsCopied","showExtraInfo","setShowExtraInfo","textAreaRef","useRef","partOfTheAddress","substr","length","ref","defaultValue","document","queryCommandSupported","current","select","execCommand","target","focus","setTimeout","strBalance","String","split","Number","parseFloat","toFixed","toString","fixBalance","htmlFor","id","Wallets","wallets","keys","map","walletName","index","Dropdown","list","dropdownIsOpen","setDropdownIsOpen","item","DropdownItem","Transfer","setIsLoading","dropdownList","reduce","acc","key","submitTx","timeout","resolve","Notification","setShowNotification","App","showNotification","prefersDarkScheme","matchMedia","localStorageDark","getItem","darkThemeIsActive","matches","localStoragePage","defaultPage","strWallets","localStorageWallets","JSON","parse","addEventListener","preventDefault","data","saveUserData","stringify","walletsByName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bac6ed58.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n\n  componentDidCatch(error) {\n    this.setState({ error });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error } = this.state;\n\n    return <div>{error ? <h1>Error</h1> : children}</div>;\n  }\n}\n","import * as BtcLib from 'bitcoinjs-lib';\nimport * as bip39 from 'bip39';\nimport * as bip32 from 'bip32';\n\nclass BtcLikeCoin {\n  constructor(params) {\n    const { name, ticker, precision } = params;\n\n    this.name = name;\n    this.ticker = ticker;\n    this.precision = precision;\n  }\n\n  createWallet = (params) => {\n    const { network } = params;\n    const mnemonic = bip39.generateMnemonic();\n    const seed = bip39.mnemonicToSeedSync(mnemonic);\n    const root = bip32.fromSeed(seed, network);\n    const node = root.derivePath(`m/44'/0'/0'/0/0`);\n    const account = BtcLib.payments.p2pkh({\n      pubkey: node.publicKey,\n      network,\n    });\n\n    const newWallet = {\n      balance: 0,\n      ticker: this.ticker,\n      precision: this.precision,\n      mnemonic,\n      pubKey: node.publicKey,\n      privKey: node.privateKey,\n      address: account.address,\n    };\n\n    return newWallet;\n  };\n\n  getBalance = () => {\n    return new Promise((res, rej) => {\n      res(0);\n    });\n  };\n\n  restoreWallet = (params) => {\n    const { network, mnemonic } = params;\n    const seed = bip39.mnemonicToSeedSync(mnemonic);\n    const root = bip32.fromSeed(seed, network);\n    const node = root.derivePath(`m/44'/0'/0'/0/0`);\n\n    const account = BtcLib.payments.p2pkh({\n      pubkey: node.publicKey,\n      network: network,\n    });\n\n    console.log('getWallet');\n    console.log('seed: ', seed);\n    console.log('root: ', root);\n    console.log('node: ', node);\n    console.log('account: ', account);\n\n    return {\n      balance: 0,\n      ticker: this.ticker,\n      precision: this.precision,\n      mnemonic,\n      pubKey: node.publicKey,\n      privKey: node.privateKey,\n      address: account.address,\n    };\n  };\n\n  send = async () => {\n    //\n  };\n}\n\nconst Coin = Object.freeze({\n  BTC: new BtcLikeCoin({\n    name: 'Bitcoin',\n    ticker: 'BTC',\n    precision: 8,\n  }),\n});\n\nexport default Coin;\n","import './index.sass';\n\nexport const Button = (props) => {\n  const { children, isLoading, onClick, type } = props;\n  const doNothing = () => null;\n\n  return (\n    <button\n      className={`button ${isLoading ? 'disable' : ''} ${type ? type : ''}`}\n      onClick={isLoading ? doNothing : onClick}\n    >\n      {isLoading ? <span className=\"button__loader\">Pending</span> : children}\n    </button>\n  );\n};\n","import './index.css';\n\nexport const Input = (props) => {\n  const { type } = props;\n\n  const checkAddressInput = (event) => {\n    // TODO: how long can address be ?\n    // const regExp = /\\w{10,}/;\n    // if (!event.value.match(regExp)) {\n    //   event.preventDefault();\n    // }\n  };\n\n  if (type === 'address') {\n    return (\n      <input\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Recipient address\"\n        onChange={checkAddressInput}\n      />\n    );\n  } else if (type === 'amount') {\n    return <input className=\"input\" type=\"number\" placeholder=\"Amount\" />;\n  }\n\n  return <input className=\"input\" type=\"text\" placeholder=\"...\" />;\n};\n","import { useState } from 'react';\nimport * as BtcLib from 'bitcoinjs-lib';\nimport { MdRestore } from 'react-icons/md';\nimport { IoMdExit } from 'react-icons/io';\nimport { IoCreateOutline } from 'react-icons/io5';\nimport { GrStatusGood } from 'react-icons/gr';\nimport { TiCancelOutline } from 'react-icons/ti';\nimport './index.sass';\nimport Coin from '../../common/coin';\nimport { Button } from '../../components/Button';\nimport { Input } from '../../components/Input';\n\nexport const Settings = (props) => {\n  const { setActivePage, setWallets, setWallet } = props;\n  const [showRestoreBlock, setShowRestoreBlock] = useState(false);\n\n  const toggleRestoreBlockVisibility = () => {\n    setShowRestoreBlock(!showRestoreBlock);\n  };\n\n  const [showSavingTheMnemonic, setShowSavingTheMnemonic] = useState(false);\n  const [newWallet, setNewWallet] = useState(undefined);\n  const [newMnemonic, setNewMnemonic] = useState('');\n\n  const handleCreate = () => {\n    const newWallet = Coin.BTC.createWallet({\n      network: BtcLib.networks.testnet,\n    });\n\n    prepareNewWallet(newWallet);\n  };\n\n  const prepareNewWallet = (wallet) => {\n    setNewWallet(wallet);\n    setNewMnemonic(wallet.mnemonic);\n    setShowSavingTheMnemonic(true);\n  };\n\n  const saveWallet = () => {\n    if (newWallet) {\n      setWallet({\n        name: newWallet.ticker,\n        wallet: newWallet,\n      });\n\n      window.localStorage.setItem('page', 'wallet');\n      setActivePage('wallet');\n    }\n  };\n\n  const handleRestore = (mnemonic) => {\n    // Coin.BTC.restoreWallet({\n    //   mnemonic,\n    // });\n  };\n\n  const [confirmLogout, setConfirmLogout] = useState(false);\n\n  const handleLogout = () => {\n    setWallets({});\n    window.localStorage.clear();\n  };\n\n  return (\n    <div className=\"settings\">\n      <h2 className=\"page-title\">SETTINGS</h2>\n\n      <div className=\"settings__buttons-wrapper\">\n        <Button onClick={handleCreate}>\n          <span className=\"settings__icon\">\n            <IoCreateOutline size=\"100%\" color=\"inherit\" />\n          </span>\n          Create\n        </Button>{' '}\n        <Button onClick={toggleRestoreBlockVisibility}>\n          <span className=\"settings__icon\">\n            <MdRestore size=\"100%\" color=\"inherit\" />\n          </span>\n          Restore\n        </Button>{' '}\n        <Button onClick={() => setConfirmLogout(true)}>\n          <span className=\"settings__icon\">\n            <IoMdExit size=\"100%\" color=\"inherit\" />\n          </span>\n          Logout\n        </Button>\n      </div>\n\n      {/* \n\n      TODO: move code below as individual components \n\n      */}\n\n      {showSavingTheMnemonic && (\n        <section className=\"settings__section\">\n          <p className=\"warning\">\n            Please save this mnemonic phrase in the safe place. You will be able\n            to restore your wallet only with this phrase\n          </p>\n          <p className=\"new-mnemonic-phrase\">{newMnemonic}</p>\n\n          <div>\n            <Button type=\"small\" onClick={saveWallet}>\n              <span className=\"settings__icon\">\n                <GrStatusGood size=\"100%\" color=\"inherit\" />\n              </span>\n              I saved\n            </Button>{' '}\n            <Button\n              type=\"small\"\n              onClick={() => setShowSavingTheMnemonic(false)}\n            >\n              <span className=\"settings__icon\">\n                <TiCancelOutline size=\"100%\" color=\"inherit\" />\n              </span>\n              Cancel\n            </Button>\n          </div>\n        </section>\n      )}\n\n      {showRestoreBlock && (\n        <section className=\"settings__section\">\n          <Input type=\"text\" />\n\n          <div>\n            <Button type=\"small\" onClick={handleRestore}>\n              <span className=\"settings__icon\">\n                <MdRestore size=\"100%\" color=\"inherit\" />\n              </span>\n              Restore\n            </Button>{' '}\n            <Button type=\"small\" onClick={() => setShowRestoreBlock(false)}>\n              <span className=\"settings__icon\">\n                <TiCancelOutline size=\"100%\" color=\"inherit\" />\n              </span>\n              Close\n            </Button>\n          </div>\n        </section>\n      )}\n\n      {confirmLogout && (\n        <section className=\"settings__section\">\n          <p className=\"warning\">\n            It cleans all data from your browser. Are you sure ?\n          </p>\n\n          <div>\n            <Button type=\"small\" onClick={handleLogout}>\n              <span className=\"settings__icon\">\n                <MdRestore size=\"100%\" color=\"inherit\" />\n              </span>\n              Confirm\n            </Button>{' '}\n            <Button type=\"small\" onClick={() => setConfirmLogout(false)}>\n              <span className=\"settings__icon\">\n                <TiCancelOutline size=\"100%\" color=\"inherit\" />\n              </span>\n              Cancel\n            </Button>\n          </div>\n        </section>\n      )}\n    </div>\n  );\n};\n","import './index.sass';\nimport { IoIosSunny, IoMdMoon } from 'react-icons/io';\nimport { AiFillHome, AiOutlineSend, AiOutlineSetting } from 'react-icons/ai';\n\nexport const Navigation = (props) => {\n  const { isDark, setIsDark, setActivePage } = props;\n\n  const activePage = (page) => {\n    window.localStorage.setItem('page', page);\n    setActivePage(page);\n  };\n\n  const changeTheme = () => {\n    window.localStorage.setItem('dark', `${!isDark}`);\n    setIsDark(!isDark);\n  };\n\n  return (\n    <nav className=\"navigation\">\n      <ul className=\"navigation__list\">\n        <li>\n          <button\n            className=\"navigation__button\"\n            onClick={() => activePage('wallet')}\n          >\n            <AiFillHome size=\"100%\" color=\"inherit\" />\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"navigation__button\"\n            onClick={() => activePage('transfer')}\n          >\n            <AiOutlineSend size=\"100%\" color=\"inherit\" />\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"navigation__button\"\n            onClick={() => activePage('settings')}\n          >\n            <AiOutlineSetting size=\"100%\" color=\"inherit\" />\n          </button>\n        </li>\n      </ul>\n\n      <button className=\"navigation__theme-button\" onClick={changeTheme}>\n        {isDark ? (\n          <IoIosSunny size=\"100%\" color=\"inherit\" />\n        ) : (\n          <IoMdMoon size=\"100%\" color=\"inherit\" />\n        )}\n      </button>\n    </nav>\n  );\n};\n","import { useState, useRef } from 'react';\nimport { AiFillCopy } from 'react-icons/ai';\n\nexport const WalletItem = (props) => {\n  const { walletIcon, wallet, shortAddress = false } = props;\n  const [isCopied, setIsCopied] = useState('');\n  const [showExtraInfo, setShowExtraInfo] = useState(false);\n  const textAreaRef = useRef(null);\n\n  const onCopy = (event) => {\n    textAreaRef.current.select();\n    document.execCommand('copy');\n    event.target.focus();\n\n    setIsCopied(true);\n    setTimeout(() => setIsCopied(false), 600);\n  };\n\n  const toogleExtraInfoVisibility = () => {\n    setShowExtraInfo(!showExtraInfo);\n  };\n\n  // TODO: check window width and set a short address then\n  const partOfTheAddress =\n    wallet.address.substr(0, 4) + // 4 chars\n    '...' +\n    wallet.address.substr(wallet.address.length - 3, wallet.address.length); // 3 chars\n\n  const fixBalance = () => {\n    let strBalance = String(wallet.balance);\n    const hasDecimals = strBalance.split('.').length > 1;\n    const tooLong = hasDecimals && strBalance.split('.')[1].length > 6; // six just for display\n\n    if (tooLong) {\n      strBalance = Number.parseFloat(strBalance).toFixed(5).toString() + '...';\n    }\n\n    return strBalance;\n  };\n\n  // TODO: move into helpers\n  function bufToHex(buffer) {\n    return [...new Uint8Array(buffer)]\n      .map((x) => x.toString(16).padStart(2, '0'))\n      .join('');\n  }\n\n  return (\n    <div className=\"wallet-item\">\n      <div className=\"wallet-item__header\">\n        <span className=\"wallet-item__icon\">{walletIcon}</span>\n\n        <span className=\"wallet-item__address\">\n          {shortAddress ? partOfTheAddress : wallet.address}\n          <form>\n            <textarea ref={textAreaRef} defaultValue={wallet.address} />\n          </form>\n          {document.queryCommandSupported('copy') && (\n            <button className=\"wallet-item__copy-button\" onClick={onCopy}>\n              {isCopied && (\n                <span className=\"wallet-item__copy-tip\">Copied!</span>\n              )}\n              <AiFillCopy size=\"100%\" color=\"var(--color)\" />\n            </button>\n          )}\n        </span>\n      </div>\n\n      <div className=\"wallet-item__middle\">\n        <span className=\"wallet-item__balance-wrapper\">\n          <span className=\"wallet-item__crypto\">{fixBalance()} BTC</span>\n        </span>\n\n        <div>\n          <label htmlFor=\"wallet-item__extra-info\">Extra info</label>\n          <input\n            type=\"checkbox\"\n            name=\"extra info\"\n            id=\"wallet-item__extra-info\"\n            onChange={toogleExtraInfoVisibility}\n          />\n        </div>\n      </div>\n\n      {showExtraInfo && (\n        <div className=\"wallet-item__footer\">\n          Keys\n          {/* <span className=\"key\">{bufToHex(wallet.pubKey.data)}</span>\n          <span className=\"key\">{bufToHex(wallet.privKey.data)}</span> */}\n        </div>\n      )}\n    </div>\n  );\n};\n","import './index.sass';\nimport { WalletItem } from './WalletItem';\nimport { RiBitCoinFill } from 'react-icons/ri';\n\nexport const Wallets = (props) => {\n  const { wallets } = props;\n\n  return (\n    <div className=\"wallets\">\n      <h2 className=\"page-title\">WALLETS</h2>\n\n      {Object.keys(wallets).length ? (\n        <>\n          {Object.keys(wallets).map((walletName, index) => {\n            if (wallets[walletName].length) {\n              return (\n                <div key={index}>\n                  {wallets[walletName].map((wallet, index) => {\n                    return (\n                      <WalletItem\n                        walletIcon={\n                          <RiBitCoinFill size=\"100%\" color=\"inherit\" />\n                        }\n                        wallet={wallet}\n                        key={index}\n                      />\n                    );\n                  })}\n                </div>\n              );\n            }\n\n            return null;\n          })}\n        </>\n      ) : (\n        <p className=\"wallets__not-wallet\">No wallets</p>\n      )}\n    </div>\n  );\n};\n","import { IoIosArrowDown } from 'react-icons/io';\nimport { useState } from 'react';\nimport './index.css';\n\nexport const Dropdown = (props) => {\n  const { list } = props;\n  const [dropdownIsOpen, setDropdownIsOpen] = useState(false);\n\n  const onClick = () => {\n    if (list.length === 1) return;\n\n    setDropdownIsOpen(!dropdownIsOpen);\n  };\n\n  return (\n    <div\n      className={`dropdown ${dropdownIsOpen ? 'open' : ''}`}\n      onClick={onClick}\n    >\n      {list.length === 1 ? (\n        <div className=\"dropdown__list\">\n          <div>{list[0]}</div>\n        </div>\n      ) : (\n        <div className=\"dropdown__list many\">\n          {list.map((item, index) => {\n            return (\n              <div\n                className={`dropdown__item ${index ? 'hidden' : ''}`}\n                key={index}\n              >\n                {item}\n              </div>\n            );\n          })}\n        </div>\n      )}\n\n      {!dropdownIsOpen && <IoIosArrowDown size=\"1.1rem\" color=\"var(--color)\" />}\n    </div>\n  );\n};\n","export const DropdownItem = (props) => {\n  const { ticker, address } = props;\n\n  return (\n    <div className=\"dropdown-item\">\n      <span className=\"dropdown-item__ticker\">{ticker}</span>\n      <span className=\"dropdown-item__address\">{address}</span>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport './index.css';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\nimport { Dropdown } from '../../components/Dropdown';\nimport { DropdownItem } from './DropdownItem';\n\nexport const Transfer = (props) => {\n  const { wallets } = props;\n  const [isLoading, setIsLoading] = useState(false);\n\n  const arrOfWallets = Object.keys(wallets).reduce((acc, key) => {\n    return [...acc, ...wallets[key]];\n  }, []);\n\n  const dropdownList = arrOfWallets.map((item) => {\n    return <DropdownItem ticker={item.ticker} address={item.address} />;\n  });\n\n  const submitTx = async () => {\n    setIsLoading(true);\n\n    function timeout() {\n      return new Promise((resolve) => setTimeout(resolve, 2000));\n    }\n\n    await timeout();\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"transfer\">\n      <h2 className=\"page-title\">TRANSFER</h2>\n\n      <Dropdown list={dropdownList} />\n\n      <div className=\"transfer__form-wrapper\">\n        <div className=\"transfer__input-wrapper\">\n          <Input type=\"address\" />\n          <Input type=\"amount\" />\n        </div>\n\n        <Button isLoading={isLoading} onClick={submitTx}>\n          SEND\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import './index.css';\n\nexport const Notification = (props) => {\n  const { setShowNotification } = props;\n\n  const closeNotification = () => {\n    setShowNotification(true);\n  };\n\n  return (\n    <div className=\"notification\">\n      <div className=\"notification__body\">Notification text...</div>\n      <button\n        className=\"notification__close-button\"\n        onClick={closeNotification}\n      >\n        Close\n      </button>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport './App.css';\nimport { saveUserData } from '../common/data';\nimport { ErrorBoundary } from '../components/ErrorBoundary';\nimport { Settings } from './Settings';\nimport { Navigation } from '../components/Navigation';\nimport { Wallets } from './Wallets';\nimport { Transfer } from './Transfer';\nimport { Notification } from '../components/Notification';\n\nexport const App = () => {\n  // Notifications ================================\n  const [showNotification, setShowNotification] = useState(false);\n\n  // Default theme ================================\n  const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');\n  const localStorageDark = window.localStorage.getItem('dark');\n  const darkThemeIsActive = localStorageDark\n    ? localStorageDark === 'true'\n    : prefersDarkScheme.matches;\n  const [isDark, setIsDark] = useState(darkThemeIsActive);\n\n  // Default page =================================\n  const localStoragePage = window.localStorage.getItem('page');\n  const defaultPage = localStoragePage ? localStoragePage : 'wallet';\n  const [activePage, setActivePage] = useState(defaultPage);\n\n  // Wallets =============================\n  const strWallets = window.localStorage.getItem('wallets') || '{}';\n  const localStorageWallets = JSON.parse(strWallets);\n  const [wallets, setWallets] = useState(localStorageWallets);\n\n  function onLogout(event) {\n    event.preventDefault();\n    delete event['returnValue'];\n\n    saveUserData({\n      name: 'wallets',\n      data: JSON.stringify(wallets),\n    });\n  }\n\n  if (typeof window !== 'undefined') {\n    window.addEventListener('beforeunload', onLogout);\n  }\n\n  function setWallet(params) {\n    const { name, wallet } = params;\n    const walletsByName = wallets[name] || [];\n\n    setWallets({\n      ...wallets,\n      [name]: [...walletsByName, wallet],\n    });\n  }\n\n  return (\n    <div className={`App ${isDark ? '' : 'light'}`}>\n      <div className=\"App-body\">\n        <ErrorBoundary>\n          <>\n            {showNotification && (\n              <Notification setShowNotification={setShowNotification} />\n            )}\n\n            <div className=\"App-body__page-wrapper\">\n              {activePage === 'wallet' && <Wallets wallets={wallets} />}\n              {activePage === 'transfer' && <Transfer wallets={wallets} />}\n              {activePage === 'settings' && (\n                <Settings\n                  setWallets={setWallets}\n                  setWallet={setWallet}\n                  setActivePage={setActivePage}\n                />\n              )}\n            </div>\n\n            <header>\n              <Navigation\n                setActivePage={setActivePage}\n                setIsDark={setIsDark}\n                isDark={isDark}\n              />\n            </header>\n          </>\n        </ErrorBoundary>\n      </div>\n    </div>\n  );\n};\n","export function saveUserData(params) {\n  const { name, data } = params;\n\n  window.localStorage.setItem(name, data);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './pages/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}