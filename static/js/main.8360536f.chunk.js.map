{"version":3,"sources":["components/ErrorBoundary/index.jsx","common/coin.js","components/Button/index.jsx","components/Input/index.jsx","pages/Settings/index.jsx","components/Navigation/index.jsx","pages/Wallets/WalletItem.jsx","pages/Wallets/index.jsx","components/Dropdown/index.jsx","pages/Transfer/DropdownItem.jsx","pages/Transfer/index.jsx","components/Notification/index.jsx","pages/App.jsx","common/data.js","index.jsx"],"names":["ErrorBoundary","props","state","error","this","setState","children","React","Component","Coin","Object","freeze","BTC","params","createWallet","network","mnemonic","bip39","seed","node","bip32","derivePath","account","BtcLib","p2pkh","pubkey","publicKey","balance","ticker","precision","pubKey","privKey","privateKey","address","getBalance","Promise","res","rej","restoreWallet","root","console","log","send","a","name","Button","isLoading","onClick","className","Input","type","placeholder","onChange","event","Settings","setActivePage","setWallets","setWallet","useState","showRestoreBlock","setShowRestoreBlock","showSavingTheMnemonic","setShowSavingTheMnemonic","undefined","newWallet","setNewWallet","newMnemonic","setNewMnemonic","prepareNewWallet","wallet","testnet","size","color","window","localStorage","clear","defaultValue","setItem","Navigation","isDark","setIsDark","activePage","page","WalletItem","walletIcon","shortAddress","isCopied","setIsCopied","showExtraInfo","setShowExtraInfo","textAreaRef","useRef","partOfTheAddress","substr","length","ref","document","queryCommandSupported","current","select","execCommand","target","focus","setTimeout","strBalance","String","split","Number","parseFloat","toFixed","toString","fixBalance","htmlFor","id","Wallets","wallets","keys","map","walletName","index","Dropdown","list","dropdownIsOpen","setDropdownIsOpen","item","DropdownItem","Transfer","setIsLoading","dropdownList","reduce","acc","key","submitTx","timeout","resolve","Notification","setShowNotification","App","showNotification","prefersDarkScheme","matchMedia","localStorageDark","getItem","darkThemeIsActive","matches","localStoragePage","defaultPage","strWallets","localStorageWallets","JSON","parse","addEventListener","preventDefault","data","saveUserData","stringify","walletsByName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8360536f.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n\n  componentDidCatch(error) {\n    this.setState({ error });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error } = this.state;\n\n    return <div>{error ? <h1>Error</h1> : children}</div>;\n  }\n}\n","import * as BtcLib from 'bitcoinjs-lib';\nimport * as bip39 from 'bip39';\nimport * as bip32 from 'bip32';\n\nclass BtcLikeCoin {\n  constructor(params) {\n    const { name, ticker, precision } = params;\n\n    this.name = name;\n    this.ticker = ticker;\n    this.precision = precision;\n  }\n\n  createWallet = (params) => {\n    const { network } = params;\n    const mnemonic = bip39.generateMnemonic();\n    const seed = bip39.mnemonicToSeedSync(mnemonic);\n    const root = bip32.fromSeed(seed, network);\n    const node = root.derivePath(`m/44'/0'/0'/0/0`);\n    const account = BtcLib.payments.p2pkh({\n      pubkey: node.publicKey,\n      network,\n    });\n\n    const newWallet = {\n      balance: 0,\n      ticker: this.ticker,\n      precision: this.precision,\n      mnemonic,\n      pubKey: node.publicKey,\n      privKey: node.privateKey,\n      address: account.address,\n    };\n\n    return newWallet;\n  };\n\n  getBalance = () => {\n    return new Promise((res, rej) => {\n      res(0);\n    });\n  };\n\n  restoreWallet = (params) => {\n    const { network, mnemonic } = params;\n    const seed = bip39.mnemonicToSeedSync(mnemonic);\n    const root = bip32.fromSeed(seed, network);\n    const node = root.derivePath(`m/44'/0'/0'/0/0`);\n\n    const account = BtcLib.payments.p2pkh({\n      pubkey: node.publicKey,\n      network: network,\n    });\n\n    console.log('getWallet');\n    console.log('seed: ', seed);\n    console.log('root: ', root);\n    console.log('node: ', node);\n    console.log('account: ', account);\n\n    return {\n      balance: 0,\n      ticker: this.ticker,\n      precision: this.precision,\n      mnemonic,\n      pubKey: node.publicKey,\n      privKey: node.privateKey,\n      address: account.address,\n    };\n  };\n\n  send = async () => {\n    //\n  };\n}\n\nconst Coin = Object.freeze({\n  BTC: new BtcLikeCoin({\n    name: 'Bitcoin',\n    ticker: 'BTC',\n    precision: 8,\n  }),\n});\n\nexport default Coin;\n","import './index.sass';\n\nexport const Button = (props) => {\n  const { children, isLoading, onClick } = props;\n  const voidFunc = () => null;\n\n  return (\n    <button\n      className={`button ${isLoading ? 'disable' : ''}`}\n      onClick={isLoading ? voidFunc : onClick}\n    >\n      {isLoading ? <span className=\"button__loader\">Pending</span> : children}\n    </button>\n  );\n};\n","import './index.css';\n\nexport const Input = (props) => {\n  const { type } = props;\n\n  const checkAddressInput = (event) => {\n    // TODO: how long can address be ?\n    // const regExp = /\\w{10,}/;\n    // if (!event.value.match(regExp)) {\n    //   event.preventDefault();\n    // }\n  };\n\n  if (type === 'address') {\n    return (\n      <input\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Recipient address\"\n        onChange={checkAddressInput}\n      />\n    );\n  } else if (type === 'amount') {\n    return <input className=\"input\" type=\"number\" placeholder=\"Amount\" />;\n  }\n\n  return <input className=\"input\" type=\"text\" placeholder=\"...\" />;\n};\n","import { useState } from 'react';\nimport * as BtcLib from 'bitcoinjs-lib';\nimport { MdRestore } from 'react-icons/md';\nimport { IoMdExit } from 'react-icons/io';\nimport { IoCreateOutline } from 'react-icons/io5';\nimport './index.sass';\nimport Coin from '../../common/coin';\nimport { Button } from '../../components/Button';\nimport { Input } from '../../components/Input';\n\nexport const Settings = (props) => {\n  const { setActivePage, setWallets, setWallet } = props;\n  const [showRestoreBlock, setShowRestoreBlock] = useState(false);\n\n  const toggleRestoreBlockVisibility = () => {\n    setShowRestoreBlock(!showRestoreBlock);\n  };\n\n  const [showSavingTheMnemonic, setShowSavingTheMnemonic] = useState(false);\n  const [newWallet, setNewWallet] = useState(undefined);\n  const [newMnemonic, setNewMnemonic] = useState('');\n\n  const handleCreate = () => {\n    const newWallet = Coin.BTC.createWallet({\n      network: BtcLib.networks.testnet,\n    });\n\n    prepareNewWallet(newWallet);\n  };\n\n  const prepareNewWallet = (wallet) => {\n    setNewWallet(wallet);\n    setNewMnemonic(wallet.mnemonic);\n    setShowSavingTheMnemonic(true);\n  };\n\n  const saveWallet = (params) => {\n    if (newWallet) {\n      setWallet({\n        name: newWallet.ticker,\n        wallet: newWallet,\n      });\n\n      window.localStorage.setItem('page', 'wallet');\n      setActivePage('wallet');\n    }\n  };\n\n  const handleRestore = (mnemonic) => {\n    // Coin.BTC.restoreWallet({\n    //   mnemonic,\n    // });\n  };\n\n  const handleLogout = () => {\n    setWallets({});\n    window.localStorage.clear();\n  };\n\n  return (\n    <div className=\"settings\">\n      <h2 className=\"page-title\">SETTINGS</h2>\n\n      <div className=\"settings__buttons-wrapper\">\n        <Button onClick={handleCreate}>\n          <span className=\"settings__icon\">\n            <IoCreateOutline size=\"100%\" color=\"inherit\" />\n          </span>\n          Create\n        </Button>{' '}\n        <Button onClick={toggleRestoreBlockVisibility}>\n          <span className=\"settings__icon\">\n            <MdRestore size=\"100%\" color=\"inherit\" />\n          </span>\n          Restore\n        </Button>{' '}\n        <Button onClick={handleLogout}>\n          <span className=\"settings__icon\">\n            <IoMdExit size=\"100%\" color=\"inherit\" />\n          </span>\n          Logout\n        </Button>\n      </div>\n\n      {showSavingTheMnemonic && (\n        <div>\n          <p className=\"warning\">\n            Please save this mnemonic phrase in the safe place. You will be able\n            to restore your wallet only with this phrase\n          </p>\n          <textarea\n            defaultValue={newMnemonic}\n            className=\"mnemonic-phrase-field\"\n          />\n          <div className=\"settings__mnemonic-buttons\">\n            <button onClick={() => saveWallet()}>I saved</button>\n            <button onClick={() => setShowSavingTheMnemonic(false)}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n\n      {showRestoreBlock && (\n        <div className=\"settings__restore-block\">\n          <Input type=\"text\" />\n\n          <div className=\"settings__restore-buttons\">\n            <button onClick={handleRestore}>Restore</button>\n            <button onClick={() => setShowRestoreBlock(false)}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import './index.sass';\nimport { IoIosSunny, IoMdMoon } from 'react-icons/io';\nimport { AiFillHome, AiOutlineSend, AiOutlineSetting } from 'react-icons/ai';\n\nexport const Navigation = (props) => {\n  const { isDark, setIsDark, setActivePage } = props;\n\n  const activePage = (page) => {\n    window.localStorage.setItem('page', page);\n    setActivePage(page);\n  };\n\n  const changeTheme = () => {\n    window.localStorage.setItem('dark', `${!isDark}`);\n    setIsDark(!isDark);\n  };\n\n  return (\n    <nav className=\"navigation\">\n      <ul className=\"navigation__list\">\n        <li>\n          <button\n            className=\"navigation__button\"\n            onClick={() => activePage('wallet')}\n          >\n            <AiFillHome size=\"100%\" color=\"inherit\" />\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"navigation__button\"\n            onClick={() => activePage('transfer')}\n          >\n            <AiOutlineSend size=\"100%\" color=\"inherit\" />\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"navigation__button\"\n            onClick={() => activePage('settings')}\n          >\n            <AiOutlineSetting size=\"100%\" color=\"inherit\" />\n          </button>\n        </li>\n      </ul>\n\n      <button className=\"navigation__theme-button\" onClick={changeTheme}>\n        {isDark ? (\n          <IoIosSunny size=\"100%\" color=\"inherit\" />\n        ) : (\n          <IoMdMoon size=\"100%\" color=\"inherit\" />\n        )}\n      </button>\n    </nav>\n  );\n};\n","import { useState, useRef } from 'react';\nimport { AiFillCopy } from 'react-icons/ai';\n\nexport const WalletItem = (props) => {\n  const { walletIcon, wallet, shortAddress = false } = props;\n  const [isCopied, setIsCopied] = useState('');\n  const [showExtraInfo, setShowExtraInfo] = useState(false);\n  const textAreaRef = useRef(null);\n\n  const onCopy = (event) => {\n    textAreaRef.current.select();\n    document.execCommand('copy');\n    event.target.focus();\n\n    setIsCopied(true);\n    setTimeout(() => setIsCopied(false), 600);\n  };\n\n  const toogleExtraInfoVisibility = () => {\n    setShowExtraInfo(!showExtraInfo);\n  };\n\n  // TODO: check window width and set a short address then\n  const partOfTheAddress =\n    wallet.address.substr(0, 4) + // 4 chars\n    '...' +\n    wallet.address.substr(wallet.address.length - 3, wallet.address.length); // 3 chars\n\n  const fixBalance = () => {\n    let strBalance = String(wallet.balance);\n    const hasDecimals = strBalance.split('.').length > 1;\n    const tooLong = hasDecimals && strBalance.split('.')[1].length > 6; // six just for display\n\n    if (tooLong) {\n      strBalance = Number.parseFloat(strBalance).toFixed(5).toString() + '...';\n    }\n\n    return strBalance;\n  };\n\n  // TODO: move into helpers\n  function bufToHex(buffer) {\n    return [...new Uint8Array(buffer)]\n      .map((x) => x.toString(16).padStart(2, '0'))\n      .join('');\n  }\n\n  return (\n    <div className=\"wallet-item\">\n      <div className=\"wallet-item__header\">\n        <span className=\"wallet-item__icon\">{walletIcon}</span>\n\n        <span className=\"wallet-item__address\">\n          {shortAddress ? partOfTheAddress : wallet.address}\n          <form>\n            <textarea ref={textAreaRef} defaultValue={wallet.address} />\n          </form>\n          {document.queryCommandSupported('copy') && (\n            <button className=\"wallet-item__copy-button\" onClick={onCopy}>\n              {isCopied && (\n                <span className=\"wallet-item__copy-tip\">Copied!</span>\n              )}\n              <AiFillCopy size=\"100%\" color=\"var(--color)\" />\n            </button>\n          )}\n        </span>\n      </div>\n\n      <div className=\"wallet-item__middle\">\n        <span className=\"wallet-item__balance-wrapper\">\n          <span className=\"wallet-item__crypto\">{fixBalance()} BTC</span>\n        </span>\n\n        <div>\n          <label htmlFor=\"wallet-item__extra-info\">Extra info</label>\n          <input\n            type=\"checkbox\"\n            name=\"extra info\"\n            id=\"wallet-item__extra-info\"\n            onChange={toogleExtraInfoVisibility}\n          />\n        </div>\n      </div>\n\n      {showExtraInfo && (\n        <div className=\"wallet-item__footer\">\n          Keys\n          {/* <span className=\"key\">{bufToHex(wallet.pubKey.data)}</span>\n          <span className=\"key\">{bufToHex(wallet.privKey.data)}</span> */}\n        </div>\n      )}\n    </div>\n  );\n};\n","import './index.sass';\nimport { WalletItem } from './WalletItem';\nimport { RiBitCoinFill } from 'react-icons/ri';\n\nexport const Wallets = (props) => {\n  const { wallets } = props;\n\n  return (\n    <div className=\"wallets\">\n      <h2 className=\"page-title\">WALLETS</h2>\n\n      {Object.keys(wallets).length ? (\n        <>\n          {Object.keys(wallets).map((walletName, index) => {\n            if (wallets[walletName].length) {\n              return (\n                <div key={index}>\n                  {wallets[walletName].map((wallet, index) => {\n                    return (\n                      <WalletItem\n                        walletIcon={\n                          <RiBitCoinFill size=\"100%\" color=\"inherit\" />\n                        }\n                        wallet={wallet}\n                        key={index}\n                      />\n                    );\n                  })}\n                </div>\n              );\n            }\n\n            return null;\n          })}\n        </>\n      ) : (\n        <p className=\"wallets__not-wallet\">No wallets</p>\n      )}\n    </div>\n  );\n};\n","import { IoIosArrowDown } from 'react-icons/io';\nimport { useState } from 'react';\nimport './index.css';\n\nexport const Dropdown = (props) => {\n  const { list } = props;\n  const [dropdownIsOpen, setDropdownIsOpen] = useState(false);\n\n  const onClick = () => {\n    if (list.length === 1) return;\n\n    setDropdownIsOpen(!dropdownIsOpen);\n  };\n\n  return (\n    <div\n      className={`dropdown ${dropdownIsOpen ? 'open' : ''}`}\n      onClick={onClick}\n    >\n      {list.length === 1 ? (\n        <div className=\"dropdown__list\">\n          <div>{list[0]}</div>\n        </div>\n      ) : (\n        <div className=\"dropdown__list many\">\n          {list.map((item, index) => {\n            return (\n              <div\n                className={`dropdown__item ${index ? 'hidden' : ''}`}\n                key={index}\n              >\n                {item}\n              </div>\n            );\n          })}\n        </div>\n      )}\n\n      {!dropdownIsOpen && <IoIosArrowDown size=\"1.1rem\" color=\"var(--color)\" />}\n    </div>\n  );\n};\n","export const DropdownItem = (props) => {\n  const { ticker, address } = props;\n\n  return (\n    <div className=\"dropdown-item\">\n      <span className=\"dropdown-item__ticker\">{ticker}</span>\n      <span className=\"dropdown-item__address\">{address}</span>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport './index.css';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\nimport { Dropdown } from '../../components/Dropdown';\nimport { DropdownItem } from './DropdownItem';\n\nexport const Transfer = (props) => {\n  const { wallets } = props;\n  const [isLoading, setIsLoading] = useState(false);\n\n  const arrOfWallets = Object.keys(wallets).reduce((acc, key) => {\n    return [...acc, ...wallets[key]];\n  }, []);\n\n  const dropdownList = arrOfWallets.map((item) => {\n    return <DropdownItem ticker={item.ticker} address={item.address} />;\n  });\n\n  const submitTx = async () => {\n    setIsLoading(true);\n\n    function timeout() {\n      return new Promise((resolve) => setTimeout(resolve, 2000));\n    }\n\n    await timeout();\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"transfer\">\n      <h2 className=\"page-title\">TRANSFER</h2>\n\n      <Dropdown list={dropdownList} />\n\n      <div className=\"transfer__form-wrapper\">\n        <div className=\"transfer__input-wrapper\">\n          <Input type=\"address\" />\n          <Input type=\"amount\" />\n        </div>\n\n        <Button isLoading={isLoading} onClick={submitTx}>\n          SEND\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import './index.css';\n\nexport const Notification = (props) => {\n  const { setShowNotification } = props;\n\n  const closeNotification = () => {\n    setShowNotification(true);\n  };\n\n  return (\n    <div className=\"notification\">\n      <div className=\"notification__body\">Notification text...</div>\n      <button\n        className=\"notification__close-button\"\n        onClick={closeNotification}\n      >\n        Close\n      </button>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport './App.css';\nimport { saveUserData } from '../common/data';\nimport { ErrorBoundary } from '../components/ErrorBoundary';\nimport { Settings } from './Settings';\nimport { Navigation } from '../components/Navigation';\nimport { Wallets } from './Wallets';\nimport { Transfer } from './Transfer';\nimport { Notification } from '../components/Notification';\n\nexport const App = () => {\n  // Notifications ================================\n  const [showNotification, setShowNotification] = useState(false);\n\n  // Default theme ================================\n  const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');\n  const localStorageDark = window.localStorage.getItem('dark');\n  const darkThemeIsActive = localStorageDark\n    ? localStorageDark === 'true'\n    : prefersDarkScheme.matches;\n  const [isDark, setIsDark] = useState(darkThemeIsActive);\n\n  // Default page =================================\n  const localStoragePage = window.localStorage.getItem('page');\n  const defaultPage = localStoragePage ? localStoragePage : 'wallet';\n  const [activePage, setActivePage] = useState(defaultPage);\n\n  // Wallets =============================\n  const strWallets = window.localStorage.getItem('wallets') || '{}';\n  const localStorageWallets = JSON.parse(strWallets);\n  const [wallets, setWallets] = useState(localStorageWallets);\n\n  function onLogout(event) {\n    event.preventDefault();\n    delete event['returnValue'];\n\n    saveUserData({\n      name: 'wallets',\n      data: JSON.stringify(wallets),\n    });\n  }\n\n  if (typeof window !== 'undefined') {\n    window.addEventListener('beforeunload', onLogout);\n  }\n\n  function setWallet(params) {\n    const { name, wallet } = params;\n    const walletsByName = wallets[name] || [];\n\n    setWallets({\n      ...wallets,\n      [name]: [...walletsByName, wallet],\n    });\n  }\n\n  return (\n    <div className={`App ${isDark ? '' : 'light'}`}>\n      <div className=\"App-body\">\n        <ErrorBoundary>\n          <>\n            {showNotification && (\n              <Notification setShowNotification={setShowNotification} />\n            )}\n\n            <div className=\"App-body__page-wrapper\">\n              {activePage === 'wallet' && <Wallets wallets={wallets} />}\n              {activePage === 'transfer' && <Transfer wallets={wallets} />}\n              {activePage === 'settings' && (\n                <Settings\n                  setWallets={setWallets}\n                  setWallet={setWallet}\n                  setActivePage={setActivePage}\n                />\n              )}\n            </div>\n\n            <header>\n              <Navigation\n                setActivePage={setActivePage}\n                setIsDark={setIsDark}\n                isDark={isDark}\n              />\n            </header>\n          </>\n        </ErrorBoundary>\n      </div>\n    </div>\n  );\n};\n","export function saveUserData(params) {\n  const { name, data } = params;\n\n  window.localStorage.setItem(name, data);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './pages/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}