{"version":3,"sources":["components/ErrorBoundary/index.jsx","common/coin.js","config/testnet.js","components/Button/index.jsx","components/Input/index.jsx","pages/Settings/index.jsx","components/Navigation/index.jsx","pages/Wallets/WalletItem.jsx","pages/Wallets/index.jsx","components/Dropdown/index.jsx","pages/Transfer/DropdownItem.jsx","pages/Transfer/index.jsx","components/Notification/index.jsx","pages/App.jsx","common/data.js","index.jsx"],"names":["ErrorBoundary","props","state","error","this","setState","children","React","Component","Coin","Object","freeze","BTC","params","createWallet","network","mnemonic","bip39","seed","node","bip32","derivePath","account","BtcLib","p2pkh","pubkey","publicKey","balance","ticker","precision","pubKey","privKey","privateKey","address","getBalance","a","window","fetch","api","response","json","data","satoshiBalance","unconfirmed","BigNumber","dividedBy","toNumber","alert","restoreWallet","root","console","send","name","Button","isLoading","onClick","type","className","doNothing","Input","onChange","placeholder","Settings","setActivePage","setWallets","setWallet","useState","showRestoreBlock","setShowRestoreBlock","showSavingTheMnemonic","setShowSavingTheMnemonic","undefined","newWallet","setNewWallet","newMnemonic","setNewMnemonic","prepareNewWallet","wallet","saveWallet","localStorage","setItem","userMnemonic","setUserMnemonic","handleRestore","testnet","restoredWallet","confirmLogout","setConfirmLogout","size","color","event","validStrMnemonic","target","value","trim","split","filter","x","join","clear","Navigation","isDark","setIsDark","activePage","page","WalletItem","walletIcon","shortAddress","isCopied","setIsCopied","showExtraInfo","setShowExtraInfo","textAreaRef","useRef","partOfTheAddress","substr","length","ref","defaultValue","document","queryCommandSupported","current","select","execCommand","focus","setTimeout","strBalance","String","Number","parseFloat","toFixed","toString","fixBalance","id","htmlFor","Wallets","wallets","keys","map","walletName","index","Dropdown","list","dropdownIsOpen","setDropdownIsOpen","item","DropdownItem","Transfer","setIsLoading","dropdownList","reduce","acc","key","submitTx","timeout","Promise","resolve","Notification","setShowNotification","App","showNotification","prefersDarkScheme","matchMedia","localStorageDark","getItem","darkThemeIsActive","matches","localStoragePage","defaultPage","strWallets","localStorageWallets","JSON","parse","addEventListener","preventDefault","saveUserData","stringify","walletsByName","ReactDOM","render","StrictMode","getElementById"],"mappings":"0mBAGaA,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,MAJQ,EADrB,qDAaE,SAAkBA,GAChBC,KAAKC,SAAS,CAAEF,YAdpB,oBAiBE,WACE,IAAQG,EAAaF,KAAKH,MAAlBK,SACAH,EAAUC,KAAKF,MAAfC,MAER,OAAO,8BAAMA,EAAQ,uCAAiBG,OArB1C,uCASE,SAAgCH,GAC9B,MAAO,CAAEA,aAVb,GAAmCI,IAAMC,W,oHCqG1BC,EATFC,OAAOC,OAAO,CACzBC,IAAK,IAzFL,WAAYC,GAAS,IAAD,gCASpBC,aAAe,SAACD,GACd,IAAQE,EAAYF,EAAZE,QACFC,EAAWC,qBACXC,EAAOD,qBAAyBD,GAEhCG,EADOC,WAAeF,EAAMH,GAChBM,WAAL,mBACPC,EAAUC,WAAgBC,MAAM,CACpCC,OAAQN,EAAKO,UACbX,YAcF,MAXkB,CAChBY,QAAS,EACTC,OAAQ,EAAKA,OACbC,UAAW,EAAKA,UAChBC,OAAQX,EAAKO,UACbK,QAASZ,EAAKa,WACdC,QAASX,EAAQW,QACjBjB,WACAD,YA5BgB,KAkCpBmB,WAlCoB,uCAkCP,WAAOrB,GAAP,qBAAAsB,EAAA,yDACHF,EAAqBpB,EAArBoB,QAAqBpB,EAAZE,SAEbqB,OAAOC,MAHA,iCAIcA,MAAM,GAAD,OAAI,EAAKC,IAAT,oBAAwBL,EAAxB,cAJnB,cAIHM,EAJG,gBAKUA,EAASC,OALnB,cAKHC,EALG,OAMQC,EAAgCD,EAAzCd,QAAyCc,EAAhBE,YANxB,kBAQF,IAAIC,IAAUF,GAAgBG,UAAU,KAAaC,YARnD,eAUTC,MAAM,sDAVG,kBAWF,GAXE,4CAlCO,2DAiDpBC,cAjDoB,uCAiDJ,WAAOnC,GAAP,2BAAAsB,EAAA,6DACNpB,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,SADH,SAINE,EAAOD,qBAAyBD,GAChCiC,EAAO7B,WAAeF,EAAMH,GAC5BI,EAAO8B,EAAK5B,WAAL,mBAEPC,EAAUC,WAAgBC,MAAM,CACpCC,OAAQN,EAAKO,UACbX,QAASA,IAVC,SAaU,EAAKmB,WAAW,CACpCD,QAASX,EAAQW,QACjBlB,YAfU,cAaNY,EAbM,yBAkBL,CACLA,UACAC,OAAQ,EAAKA,OACbC,UAAW,EAAKA,UAChBC,OAAQX,EAAKO,UACbK,QAASZ,EAAKa,WACdC,QAASX,EAAQW,QACjBjB,WACAD,YA1BU,yCA6BZmC,QAAQ/C,MAAR,MA7BY,mBA8BL,GA9BK,0DAjDI,2DAmFpBgD,KAnFoB,sBAmFb,sBAAAhB,EAAA,0FAlFL,IAAQiB,EAAiCvC,EAAjCuC,KAAMxB,EAA2Bf,EAA3Be,OAAQC,EAAmBhB,EAAnBgB,UAAWS,EAAQzB,EAARyB,IAEjClC,KAAKgD,KAAOA,EACZhD,KAAKwB,OAASA,EACdxB,KAAKyB,UAAYA,EACjBzB,KAAKkC,IAAMA,EAmFR,CAAa,CAChBc,KAAM,UACNxB,OAAQ,MACRC,UAAW,EACXS,IC9FK,6CCJIe,G,OAAS,SAACpD,GACrB,IAAQK,EAAuCL,EAAvCK,SAAUgD,EAA6BrD,EAA7BqD,UAAWC,EAAkBtD,EAAlBsD,QAASC,EAASvD,EAATuD,KAGtC,OACE,wBACEC,UAAS,iBAAYH,EAAY,UAAY,GAApC,YAA0CE,GAAc,IACjED,QAASD,EALK,kBAAM,MAKaC,EAFnC,SAIGD,EAAY,sBAAMG,UAAU,iBAAhB,qBAAkDnD,MCT/DoD,G,OAAY,kBAAM,OAEXC,EAAQ,SAAC1D,GACpB,IAAQuD,EAA+BvD,EAA/BuD,KAAR,EAAuCvD,EAAzB2D,gBAAd,MAAyBF,EAAzB,EAUA,MAAa,YAATF,EAEA,uBACEI,SAAU,WACRA,KAGFH,UAAU,kBACVD,KAAK,OACLK,YAAY,sBAGE,WAATL,EAEP,uBACEI,SAAUA,EACVH,UAAU,kBACVD,KAAK,SACLK,YAAY,WAMhB,uBACED,SAAUA,EACVH,UAAU,QACVD,KAAK,OACLK,YAAY,SC/BLC,EAAW,SAAC7D,GACvB,IAAQ8D,EAAyC9D,EAAzC8D,cAAeC,EAA0B/D,EAA1B+D,WAAYC,EAAchE,EAAdgE,UACnC,EAAgDC,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KAMA,EAA0DF,oBAAS,GAAnE,mBAAOG,EAAP,KAA8BC,EAA9B,KACA,EAAkCJ,wBAASK,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCP,mBAAS,IAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KAUMC,EAAmB,SAACC,GACxBJ,EAAaI,GACbF,EAAeE,EAAO7D,UACtBsD,GAAyB,IAGrBQ,EAAa,WACbN,IACFP,EAAU,CACRb,KAAMoB,EAAU5C,OAChBiD,OAAQL,IAGVpC,OAAO2C,aAAaC,QAAQ,OAAQ,UACpCjB,EAAc,YAIlB,EAAwCG,mBAAS,IAAjD,mBAAOe,EAAP,KAAqBC,EAArB,KAYMC,EAAa,uCAAG,4BAAAhD,EAAA,sEACS1B,EAAKG,IAAIoC,cAAc,CAClDhC,SAAUiE,EACVlE,QAASQ,WAAgB6D,UAHP,QACdC,EADc,UAOlBZ,EAAaY,GAGbP,KAVkB,2CAAH,qDAcnB,EAA0CZ,oBAAS,GAAnD,mBAAOoB,EAAP,KAAsBC,EAAtB,KAOA,OACE,sBAAK9B,UAAU,WAAf,UACE,oBAAIA,UAAU,aAAd,sBAEA,sBAAKA,UAAU,4BAAf,UACE,eAAC,EAAD,CAAQF,QAhEO,WACnB,IAAMiB,EAAY/D,EAAKG,IAAIE,aAAa,CACtCC,QAASQ,WAAgB6D,UAG3BR,EAAiBJ,IA2Db,UACE,sBAAMf,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAiB+B,KAAK,OAAOC,MAAM,cAFvC,YAKU,IACV,eAAC,EAAD,CAAQlC,QA9EuB,WACnCa,GAAqBD,IA6EjB,UACE,sBAAMV,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAW+B,KAAK,OAAOC,MAAM,cAFjC,aAKU,IACV,eAAC,EAAD,CAAQlC,QAAS,kBAAMgC,GAAiB,IAAxC,UACE,sBAAM9B,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAU+B,KAAK,OAAOC,MAAM,cAFhC,eAcDpB,GACC,0BAASZ,UAAU,oBAAnB,UACE,mBAAGA,UAAU,UAAb,+HAIA,mBAAGA,UAAU,sBAAb,SAAoCiB,IAEpC,gCACE,eAAC,EAAD,CAAQlB,KAAK,QAAQD,QAASuB,EAA9B,UACE,sBAAMrB,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAc+B,KAAK,OAAOC,MAAM,cAFpC,aAKU,IACV,eAAC,EAAD,CACEjC,KAAK,QACLD,QAAS,kBAAMe,GAAyB,IAF1C,UAIE,sBAAMb,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAiB+B,KAAK,OAAOC,MAAM,cALvC,kBAaLtB,GACC,0BAASV,UAAU,oBAAnB,UACE,cAAC,EAAD,CAAOD,KAAK,OAAOI,SA5FA,SAAC8B,GAC1B,IAAMC,EAAmBD,EAAME,OAAOC,MACnCC,OACAC,MAAM,KACNC,QAAO,SAACC,GAAD,OAAOA,KACdC,KAAK,KAERhB,EAAgBS,MAuFV,gCACE,eAAC,EAAD,CAAQnC,KAAK,QAAQD,QAAS4B,EAA9B,UACE,sBAAM1B,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAW+B,KAAK,OAAOC,MAAM,cAFjC,aAKU,IACV,eAAC,EAAD,CAAQjC,KAAK,QAAQD,QAAS,kBAAMa,GAAoB,IAAxD,UACE,sBAAMX,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAiB+B,KAAK,OAAOC,MAAM,cAFvC,iBAULH,GACC,0BAAS7B,UAAU,oBAAnB,UACE,mBAAGA,UAAU,UAAb,kEAIA,gCACE,eAAC,EAAD,CAAQD,KAAK,QAAQD,QA5FV,WACnBS,EAAW,IACX5B,OAAO2C,aAAaoB,SA0FZ,UACE,sBAAM1C,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAW+B,KAAK,OAAOC,MAAM,cAFjC,aAKU,IACV,eAAC,EAAD,CAAQjC,KAAK,QAAQD,QAAS,kBAAMgC,GAAiB,IAArD,UACE,sBAAM9B,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAiB+B,KAAK,OAAOC,MAAM,cAFvC,sB,iBC5KCW,EAAa,SAACnG,GACzB,IAAQoG,EAAqCpG,EAArCoG,OAAQC,EAA6BrG,EAA7BqG,UAAWvC,EAAkB9D,EAAlB8D,cAErBwC,EAAa,SAACC,GAClBpE,OAAO2C,aAAaC,QAAQ,OAAQwB,GACpCzC,EAAcyC,IAQhB,OACE,sBAAK/C,UAAU,aAAf,UACE,qBAAIA,UAAU,mBAAd,UACE,6BACE,wBACEA,UAAU,qBACVF,QAAS,kBAAMgD,EAAW,WAF5B,SAIE,cAAC,IAAD,CAAYf,KAAK,OAAOC,MAAM,gBAGlC,6BACE,wBACEhC,UAAU,qBACVF,QAAS,kBAAMgD,EAAW,aAF5B,SAIE,cAAC,IAAD,CAAef,KAAK,OAAOC,MAAM,gBAGrC,6BACE,wBACEhC,UAAU,qBACVF,QAAS,kBAAMgD,EAAW,aAF5B,SAIE,cAAC,IAAD,CAAkBf,KAAK,OAAOC,MAAM,mBAK1C,wBAAQhC,UAAU,2BAA2BF,QAlC7B,WAClBnB,OAAO2C,aAAaC,QAAQ,OAA5B,WAAwCqB,IACxCC,GAAWD,IAgCT,SACGA,EACC,cAAC,IAAD,CAAYb,KAAK,OAAOC,MAAM,YAE9B,cAAC,IAAD,CAAUD,KAAK,OAAOC,MAAM,kBC9CzBgB,G,OAAa,SAACxG,GACzB,IAAQyG,EAA6CzG,EAA7CyG,WAAY7B,EAAiC5E,EAAjC4E,OAApB,EAAqD5E,EAAzB0G,oBAA5B,SACA,EAAgCzC,mBAAS,IAAzC,mBAAO0C,EAAP,KAAiBC,EAAjB,KACA,EAA0C3C,oBAAS,GAAnD,mBAAO4C,EAAP,KAAsBC,EAAtB,KACMC,EAAcC,iBAAO,MAgBrBC,EACJrC,EAAO5C,QAAQkF,OAAO,EAAG,GACzB,MACAtC,EAAO5C,QAAQkF,OAAOtC,EAAO5C,QAAQmF,OAAS,EAAGvC,EAAO5C,QAAQmF,QAqBlE,OACE,sBAAK3D,UAAU,cAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,oBAAhB,SAAqCiD,IAErC,uBAAMjD,UAAU,uBAAhB,UACE,sBAAMA,UAAU,YAAhB,SACGkD,EAAeO,EAAmBrC,EAAO5C,UAE5C,+BACE,0BAAUoF,IAAKL,EAAaM,aAAczC,EAAO5C,YAElDsF,SAASC,sBAAsB,SAC9B,yBAAQ/D,UAAU,2BAA2BF,QAnDxC,SAACmC,GACdsB,EAAYS,QAAQC,SACpBH,SAASI,YAAY,QACrBjC,EAAME,OAAOgC,QAEbf,GAAY,GACZgB,YAAW,kBAAMhB,GAAY,KAAQ,MA6C7B,UACGD,GACC,sBAAMnD,UAAU,wBAAhB,qBAEF,cAAC,IAAD,CAAY+B,KAAK,OAAOC,MAAM,0BAMtC,sBAAKhC,UAAU,sBAAf,UACE,uBAAMA,UAAU,+BAAhB,UACE,uBAAMA,UAAU,gCAAhB,UA5CW,WACjB,IAAIqE,EAAaC,OAAOlD,EAAOlD,SAQ/B,OAPoBmG,EAAW/B,MAAM,KAAKqB,OAAS,GACpBU,EAAW/B,MAAM,KAAK,GAAGqB,OAAS,IAG/DU,EAAaE,OAAOC,WAAWH,GAAYI,QAAQ,GAAGC,WAAa,OAG9DL,EAoCEM,GADH,UAGA,wBAAQ3E,UAAU,8BAAlB,SACE,cAAC,IAAD,CAAU+B,KAAK,OAAOC,MAAM,iBAIhC,gCACE,uBACEjC,KAAK,WACLJ,KAAK,aACLiF,GAAG,0BACHzE,SAnEwB,WAChCmD,GAAkBD,MAoEZ,uBAAOwB,QAAQ,0BAAf,8BAIHxB,GACC,qBAAKrD,UAAU,sBAAf,uB,SCzFK8E,EAAU,SAACtI,GACtB,IAAQuI,EAAYvI,EAAZuI,QAER,OACE,sBAAK/E,UAAU,UAAf,UACE,oBAAIA,UAAU,aAAd,qBAEC/C,OAAO+H,KAAKD,GAASpB,OACpB,mCACG1G,OAAO+H,KAAKD,GAASE,KAAI,SAACC,EAAYC,GACrC,OAAIJ,EAAQG,GAAYvB,OAEpB,8BACGoB,EAAQG,GAAYD,KAAI,SAAC7D,EAAQ+D,GAChC,OACE,cAAC,EAAD,CACElC,WACE,cAAC,IAAD,CAAelB,KAAK,OAAOC,MAAM,YAEnCZ,OAAQA,GACH+D,OARHA,GAgBP,UAIX,mBAAGnF,UAAU,sBAAb,4BChCKoF,G,cAAW,SAAC5I,GACvB,IAAQ6I,EAAS7I,EAAT6I,KACR,EAA4C5E,oBAAS,GAArD,mBAAO6E,EAAP,KAAuBC,EAAvB,KAQA,OACE,sBACEvF,UAAS,mBAAcsF,EAAiB,OAAS,IACjDxF,QATY,WACM,IAAhBuF,EAAK1B,QAET4B,GAAmBD,IAInB,UAImB,IAAhBD,EAAK1B,OACJ,qBAAK3D,UAAU,iBAAf,SACE,8BAAMqF,EAAK,OAGb,qBAAKrF,UAAU,sBAAf,SACGqF,EAAKJ,KAAI,SAACO,EAAML,GACf,OACE,qBACEnF,UAAS,yBAAoBmF,EAAQ,SAAW,IADlD,SAIGK,GAFIL,SASbG,GAAkB,cAAC,IAAD,CAAgBvD,KAAK,SAASC,MAAM,sBCtCjDyD,EAAe,SAACjJ,GAC3B,IAAQ2B,EAAoB3B,EAApB2B,OAAQK,EAAYhC,EAAZgC,QAEhB,OACE,sBAAKwB,UAAU,gBAAf,UACE,sBAAMA,UAAU,wBAAhB,SAAyC7B,IACzC,sBAAM6B,UAAU,yBAAhB,SAA0CxB,QCCnCkH,EAAW,SAAClJ,GACvB,IAAQuI,EAAYvI,EAAZuI,QACR,EAAkCtE,oBAAS,GAA3C,mBAAOZ,EAAP,KAAkB8F,EAAlB,KAMMC,EAJe3I,OAAO+H,KAAKD,GAASc,QAAO,SAACC,EAAKC,GACrD,MAAM,GAAN,mBAAWD,GAAX,YAAmBf,EAAQgB,OAC1B,IAE+Bd,KAAI,SAACO,GACrC,OAAO,cAAC,EAAD,CAAcrH,OAAQqH,EAAKrH,OAAQK,QAASgH,EAAKhH,aAGpDwH,EAAQ,uCAAG,iBAGNC,EAHM,SAAAvH,EAAA,6DAGNuH,EAHM,WAIb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAa/B,WAAW+B,EAAS,SAHtDR,GAAa,GADE,SAOTM,IAPS,OAQfN,GAAa,GARE,2CAAH,qDAWd,OACE,sBAAK3F,UAAU,WAAf,UACE,oBAAIA,UAAU,aAAd,sBAEA,cAAC,EAAD,CAAUqF,KAAMO,IAEhB,sBAAK5F,UAAU,yBAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,cAAC,EAAD,CAAOD,KAAK,YACZ,cAAC,EAAD,CAAOA,KAAK,cAGd,cAAC,EAAD,CAAQF,UAAWA,EAAWC,QAASkG,EAAvC,yBCxCKI,G,OAAe,SAAC5J,GAC3B,IAAQ6J,EAAwB7J,EAAxB6J,oBAMR,OACE,sBAAKrG,UAAU,eAAf,UACE,qBAAKA,UAAU,qBAAf,kCACA,wBACEA,UAAU,6BACVF,QAToB,WACxBuG,GAAoB,IAMlB,wBCFOC,EAAM,WAEjB,MAAgD7F,oBAAS,GAAzD,mBAAO8F,EAAP,KAAyBF,EAAzB,KAGMG,EAAoB7H,OAAO8H,WAAW,gCACtCC,EAAmB/H,OAAO2C,aAAaqF,QAAQ,QAC/CC,EAAoBF,EACD,SAArBA,EACAF,EAAkBK,QACtB,EAA4BpG,mBAASmG,GAArC,mBAAOhE,EAAP,KAAeC,EAAf,KAGMiE,EAAmBnI,OAAO2C,aAAaqF,QAAQ,QAC/CI,EAAcD,GAAsC,SAC1D,EAAoCrG,mBAASsG,GAA7C,mBAAOjE,EAAP,KAAmBxC,EAAnB,KAGM0G,EAAarI,OAAO2C,aAAaqF,QAAQ,YAAc,KACvDM,EAAsBC,KAAKC,MAAMH,GACvC,EAA8BvG,mBAASwG,GAAvC,mBAAOlC,EAAP,KAAgBxE,EAAhB,KA0BA,MAdsB,qBAAX5B,QACTA,OAAOyI,iBAAiB,gBAX1B,SAAkBnF,GAChBA,EAAMoF,wBACCpF,EAAK,YClCT,SAAsB7E,GAC3B,IAAQuC,EAAevC,EAAfuC,KAAMX,EAAS5B,EAAT4B,KAEdL,OAAO2C,aAAaC,QAAQ5B,EAAMX,GDiChCsI,CAAa,CACX3H,KAAM,UACNX,KAAMkI,KAAKK,UAAUxC,QAmBvB,qBAAK/E,UAAS,cAAS4C,EAAS,GAAK,SAArC,SACE,qBAAK5C,UAAU,WAAf,SACE,cAAC,EAAD,UACE,qCACGuG,GACC,cAAC,EAAD,CAAcF,oBAAqBA,IAGrC,sBAAKrG,UAAU,yBAAf,UACkB,WAAf8C,GAA2B,cAAC,EAAD,CAASiC,QAASA,IAC9B,aAAfjC,GAA6B,cAAC,EAAD,CAAUiC,QAASA,IACjC,aAAfjC,GACC,cAAC,EAAD,CACEvC,WAAYA,EACZC,UAzBhB,SAAmBpD,GACjB,IAAQuC,EAAiBvC,EAAjBuC,KAAMyB,EAAWhE,EAAXgE,OACRoG,EAAgBzC,EAAQpF,IAAS,GAEvCY,EAAW,2BACNwE,GADK,kBAEPpF,EAFO,sBAEI6H,GAFJ,CAEmBpG,QAoBfd,cAAeA,OAKrB,iCACE,cAAC,EAAD,CACEA,cAAeA,EACfuC,UAAWA,EACXD,OAAQA,gB,OE5ExB6E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7D,SAAS8D,eAAe,W","file":"static/js/main.6deb7ff4.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n\n  componentDidCatch(error) {\n    this.setState({ error });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error } = this.state;\n\n    return <div>{error ? <h1>Error</h1> : children}</div>;\n  }\n}\n","import * as BtcLib from 'bitcoinjs-lib';\nimport * as bip39 from 'bip39';\nimport * as bip32 from 'bip32';\nimport BigNumber from 'bignumber.js';\nimport testnetConfig from '../config/testnet';\n\nclass UtxoCoin {\n  constructor(params) {\n    const { name, ticker, precision, api } = params;\n\n    this.name = name;\n    this.ticker = ticker;\n    this.precision = precision;\n    this.api = api;\n  }\n\n  createWallet = (params) => {\n    const { network } = params;\n    const mnemonic = bip39.generateMnemonic();\n    const seed = bip39.mnemonicToSeedSync(mnemonic);\n    const root = bip32.fromSeed(seed, network);\n    const node = root.derivePath(`m/44'/0'/0'/0/0`);\n    const account = BtcLib.payments.p2pkh({\n      pubkey: node.publicKey,\n      network,\n    });\n\n    const newWallet = {\n      balance: 0,\n      ticker: this.ticker,\n      precision: this.precision,\n      pubKey: node.publicKey,\n      privKey: node.privateKey,\n      address: account.address,\n      mnemonic,\n      network,\n    };\n\n    return newWallet;\n  };\n\n  getBalance = async (params) => {\n    const { address, network } = params;\n\n    if (window.fetch) {\n      const response = await fetch(`${this.api}/address/${address}/balance/`);\n      const data = await response.json();\n      const { balance: satoshiBalance, unconfirmed } = data;\n\n      return new BigNumber(satoshiBalance).dividedBy(100_000_000).toNumber();\n    } else {\n      alert(\"your browser doesn't support this fetching balance\");\n      return 0;\n    }\n  };\n\n  restoreWallet = async (params) => {\n    const { network, mnemonic } = params;\n\n    try {\n      const seed = bip39.mnemonicToSeedSync(mnemonic);\n      const root = bip32.fromSeed(seed, network);\n      const node = root.derivePath(`m/44'/0'/0'/0/0`);\n\n      const account = BtcLib.payments.p2pkh({\n        pubkey: node.publicKey,\n        network: network,\n      });\n\n      const balance = await this.getBalance({\n        address: account.address,\n        network,\n      });\n\n      return {\n        balance,\n        ticker: this.ticker,\n        precision: this.precision,\n        pubKey: node.publicKey,\n        privKey: node.privateKey,\n        address: account.address,\n        mnemonic,\n        network,\n      };\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  };\n\n  send = async () => {\n    //\n  };\n}\n\nconst Coin = Object.freeze({\n  BTC: new UtxoCoin({\n    name: 'Bitcoin',\n    ticker: 'BTC',\n    precision: 8,\n    api: testnetConfig.BTC.api,\n  }),\n});\n\nexport default Coin;\n","export default {\n  BTC: {\n    name: 'Bitcoin',\n    ticker: 'BTC',\n    precision: 8,\n    explorer: '',\n    api: 'https://api.bitcore.io/api/BTC/testnet',\n    // api: 'https://test-insight.bitpay.com/api',\n  },\n};\n","import './index.sass';\n\nexport const Button = (props) => {\n  const { children, isLoading, onClick, type } = props;\n  const doNothing = () => null;\n\n  return (\n    <button\n      className={`button ${isLoading ? 'disable' : ''} ${type ? type : ''}`}\n      onClick={isLoading ? doNothing : onClick}\n    >\n      {isLoading ? <span className=\"button__loader\">Pending</span> : children}\n    </button>\n  );\n};\n","import './index.css';\n\nconst doNothing = () => null;\n\nexport const Input = (props) => {\n  const { type, onChange = doNothing } = props;\n\n  const checkAddressInput = (event) => {\n    // TODO: how long can address be ?\n    // const regExp = /\\w{10,}/;\n    // if (!event.value.match(regExp)) {\n    //   event.preventDefault();\n    // }\n  };\n\n  if (type === 'address') {\n    return (\n      <input\n        onChange={() => {\n          onChange();\n          checkAddressInput();\n        }}\n        className=\"input mono-font\"\n        type=\"text\"\n        placeholder=\"Recipient address\"\n      />\n    );\n  } else if (type === 'amount') {\n    return (\n      <input\n        onChange={onChange}\n        className=\"input mono-font\"\n        type=\"number\"\n        placeholder=\"Amount\"\n      />\n    );\n  }\n\n  return (\n    <input\n      onChange={onChange}\n      className=\"input\"\n      type=\"text\"\n      placeholder=\"...\"\n    />\n  );\n};\n","import { useState } from 'react';\nimport * as BtcLib from 'bitcoinjs-lib';\nimport { MdRestore } from 'react-icons/md';\nimport { IoMdExit } from 'react-icons/io';\nimport { IoCreateOutline } from 'react-icons/io5';\nimport { GrStatusGood } from 'react-icons/gr';\nimport { TiCancelOutline } from 'react-icons/ti';\nimport './index.sass';\nimport Coin from '../../common/coin';\nimport { Button } from '../../components/Button';\nimport { Input } from '../../components/Input';\n\nexport const Settings = (props) => {\n  const { setActivePage, setWallets, setWallet } = props;\n  const [showRestoreBlock, setShowRestoreBlock] = useState(false);\n\n  const toggleRestoreBlockVisibility = () => {\n    setShowRestoreBlock(!showRestoreBlock);\n  };\n\n  const [showSavingTheMnemonic, setShowSavingTheMnemonic] = useState(false);\n  const [newWallet, setNewWallet] = useState(undefined);\n  const [newMnemonic, setNewMnemonic] = useState('');\n\n  const handleCreate = () => {\n    const newWallet = Coin.BTC.createWallet({\n      network: BtcLib.networks.testnet,\n    });\n\n    prepareNewWallet(newWallet);\n  };\n\n  const prepareNewWallet = (wallet) => {\n    setNewWallet(wallet);\n    setNewMnemonic(wallet.mnemonic);\n    setShowSavingTheMnemonic(true);\n  };\n\n  const saveWallet = () => {\n    if (newWallet) {\n      setWallet({\n        name: newWallet.ticker,\n        wallet: newWallet,\n      });\n\n      window.localStorage.setItem('page', 'wallet');\n      setActivePage('wallet');\n    }\n  };\n\n  const [userMnemonic, setUserMnemonic] = useState('');\n\n  const updateUserMnemonic = (event) => {\n    const validStrMnemonic = event.target.value\n      .trim()\n      .split(' ')\n      .filter((x) => x)\n      .join(' ');\n\n    setUserMnemonic(validStrMnemonic);\n  };\n\n  const handleRestore = async () => {\n    const restoredWallet = await Coin.BTC.restoreWallet({\n      mnemonic: userMnemonic,\n      network: BtcLib.networks.testnet,\n    });\n\n    if (restoredWallet) {\n      setNewWallet(restoredWallet);\n\n      // TODO: fix this redirect. Now it isn't working\n      saveWallet();\n    }\n  };\n\n  const [confirmLogout, setConfirmLogout] = useState(false);\n\n  const handleLogout = () => {\n    setWallets({});\n    window.localStorage.clear();\n  };\n\n  return (\n    <div className=\"settings\">\n      <h2 className=\"page-title\">SETTINGS</h2>\n\n      <div className=\"settings__buttons-wrapper\">\n        <Button onClick={handleCreate}>\n          <span className=\"settings__icon\">\n            <IoCreateOutline size=\"100%\" color=\"inherit\" />\n          </span>\n          Create\n        </Button>{' '}\n        <Button onClick={toggleRestoreBlockVisibility}>\n          <span className=\"settings__icon\">\n            <MdRestore size=\"100%\" color=\"inherit\" />\n          </span>\n          Restore\n        </Button>{' '}\n        <Button onClick={() => setConfirmLogout(true)}>\n          <span className=\"settings__icon\">\n            <IoMdExit size=\"100%\" color=\"inherit\" />\n          </span>\n          Logout\n        </Button>\n      </div>\n\n      {/* \n\n      TODO: move code below as individual components \n\n      */}\n\n      {showSavingTheMnemonic && (\n        <section className=\"settings__section\">\n          <p className=\"warning\">\n            Please save this mnemonic phrase in the safe place. You will be able\n            to restore your wallet only with this phrase\n          </p>\n          <p className=\"new-mnemonic-phrase\">{newMnemonic}</p>\n\n          <div>\n            <Button type=\"small\" onClick={saveWallet}>\n              <span className=\"settings__icon\">\n                <GrStatusGood size=\"100%\" color=\"inherit\" />\n              </span>\n              I saved\n            </Button>{' '}\n            <Button\n              type=\"small\"\n              onClick={() => setShowSavingTheMnemonic(false)}\n            >\n              <span className=\"settings__icon\">\n                <TiCancelOutline size=\"100%\" color=\"inherit\" />\n              </span>\n              Cancel\n            </Button>\n          </div>\n        </section>\n      )}\n\n      {showRestoreBlock && (\n        <section className=\"settings__section\">\n          <Input type=\"text\" onChange={updateUserMnemonic} />\n\n          <div>\n            <Button type=\"small\" onClick={handleRestore}>\n              <span className=\"settings__icon\">\n                <MdRestore size=\"100%\" color=\"inherit\" />\n              </span>\n              Restore\n            </Button>{' '}\n            <Button type=\"small\" onClick={() => setShowRestoreBlock(false)}>\n              <span className=\"settings__icon\">\n                <TiCancelOutline size=\"100%\" color=\"inherit\" />\n              </span>\n              Close\n            </Button>\n          </div>\n        </section>\n      )}\n\n      {confirmLogout && (\n        <section className=\"settings__section\">\n          <p className=\"warning\">\n            It cleans all data from your browser. Are you sure ?\n          </p>\n\n          <div>\n            <Button type=\"small\" onClick={handleLogout}>\n              <span className=\"settings__icon\">\n                <MdRestore size=\"100%\" color=\"inherit\" />\n              </span>\n              Confirm\n            </Button>{' '}\n            <Button type=\"small\" onClick={() => setConfirmLogout(false)}>\n              <span className=\"settings__icon\">\n                <TiCancelOutline size=\"100%\" color=\"inherit\" />\n              </span>\n              Cancel\n            </Button>\n          </div>\n        </section>\n      )}\n    </div>\n  );\n};\n","import './index.sass';\nimport { IoIosSunny, IoMdMoon } from 'react-icons/io';\nimport { AiFillHome, AiOutlineSend, AiOutlineSetting } from 'react-icons/ai';\n\nexport const Navigation = (props) => {\n  const { isDark, setIsDark, setActivePage } = props;\n\n  const activePage = (page) => {\n    window.localStorage.setItem('page', page);\n    setActivePage(page);\n  };\n\n  const changeTheme = () => {\n    window.localStorage.setItem('dark', `${!isDark}`);\n    setIsDark(!isDark);\n  };\n\n  return (\n    <nav className=\"navigation\">\n      <ul className=\"navigation__list\">\n        <li>\n          <button\n            className=\"navigation__button\"\n            onClick={() => activePage('wallet')}\n          >\n            <AiFillHome size=\"100%\" color=\"inherit\" />\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"navigation__button\"\n            onClick={() => activePage('transfer')}\n          >\n            <AiOutlineSend size=\"100%\" color=\"inherit\" />\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"navigation__button\"\n            onClick={() => activePage('settings')}\n          >\n            <AiOutlineSetting size=\"100%\" color=\"inherit\" />\n          </button>\n        </li>\n      </ul>\n\n      <button className=\"navigation__theme-button\" onClick={changeTheme}>\n        {isDark ? (\n          <IoIosSunny size=\"100%\" color=\"inherit\" />\n        ) : (\n          <IoMdMoon size=\"100%\" color=\"inherit\" />\n        )}\n      </button>\n    </nav>\n  );\n};\n","import { useState, useRef } from 'react';\nimport { AiFillCopy } from 'react-icons/ai';\nimport { GrUpdate } from 'react-icons/gr';\n\nexport const WalletItem = (props) => {\n  const { walletIcon, wallet, shortAddress = false } = props;\n  const [isCopied, setIsCopied] = useState('');\n  const [showExtraInfo, setShowExtraInfo] = useState(false);\n  const textAreaRef = useRef(null);\n\n  const onCopy = (event) => {\n    textAreaRef.current.select();\n    document.execCommand('copy');\n    event.target.focus();\n\n    setIsCopied(true);\n    setTimeout(() => setIsCopied(false), 600);\n  };\n\n  const toogleExtraInfoVisibility = () => {\n    setShowExtraInfo(!showExtraInfo);\n  };\n\n  // TODO: check window width and set a short address then\n  const partOfTheAddress =\n    wallet.address.substr(0, 4) + // 4 chars\n    '...' +\n    wallet.address.substr(wallet.address.length - 3, wallet.address.length); // 3 chars\n\n  const fixBalance = () => {\n    let strBalance = String(wallet.balance);\n    const hasDecimals = strBalance.split('.').length > 1;\n    const tooLong = hasDecimals && strBalance.split('.')[1].length > 6; // six just for display\n\n    if (tooLong) {\n      strBalance = Number.parseFloat(strBalance).toFixed(5).toString() + '...';\n    }\n\n    return strBalance;\n  };\n\n  // TODO: move into helpers\n  function bufToHex(buffer) {\n    return [...new Uint8Array(buffer)]\n      .map((x) => x.toString(16).padStart(2, '0'))\n      .join('');\n  }\n\n  return (\n    <div className=\"wallet-item\">\n      <div className=\"wallet-item__header\">\n        <span className=\"wallet-item__icon\">{walletIcon}</span>\n\n        <span className=\"wallet-item__address\">\n          <span className=\"mono-font\">\n            {shortAddress ? partOfTheAddress : wallet.address}\n          </span>\n          <form>\n            <textarea ref={textAreaRef} defaultValue={wallet.address} />\n          </form>\n          {document.queryCommandSupported('copy') && (\n            <button className=\"wallet-item__copy-button\" onClick={onCopy}>\n              {isCopied && (\n                <span className=\"wallet-item__copy-tip\">Copied!</span>\n              )}\n              <AiFillCopy size=\"100%\" color=\"var(--color)\" />\n            </button>\n          )}\n        </span>\n      </div>\n\n      <div className=\"wallet-item__middle\">\n        <span className=\"wallet-item__balance-wrapper\">\n          <span className=\"wallet-item__crypto mono-font\">\n            {fixBalance()} BTC\n          </span>\n          <button className=\"wallet-item__update-balance\">\n            <GrUpdate size=\"100%\" color=\"inherit\" />\n          </button>\n        </span>\n\n        <div>\n          <input\n            type=\"checkbox\"\n            name=\"extra info\"\n            id=\"wallet-item__extra-info\"\n            onChange={toogleExtraInfoVisibility}\n          />\n          <label htmlFor=\"wallet-item__extra-info\">Extra info</label>\n        </div>\n      </div>\n\n      {showExtraInfo && (\n        <div className=\"wallet-item__footer\">\n          Keys\n          {/* <span className=\"key\">{bufToHex(wallet.pubKey.data)}</span>\n          <span className=\"key\">{bufToHex(wallet.privKey.data)}</span> */}\n        </div>\n      )}\n    </div>\n  );\n};\n","import './index.sass';\nimport { WalletItem } from './WalletItem';\nimport { RiBitCoinFill } from 'react-icons/ri';\n\nexport const Wallets = (props) => {\n  const { wallets } = props;\n\n  return (\n    <div className=\"wallets\">\n      <h2 className=\"page-title\">WALLETS</h2>\n\n      {Object.keys(wallets).length ? (\n        <>\n          {Object.keys(wallets).map((walletName, index) => {\n            if (wallets[walletName].length) {\n              return (\n                <div key={index}>\n                  {wallets[walletName].map((wallet, index) => {\n                    return (\n                      <WalletItem\n                        walletIcon={\n                          <RiBitCoinFill size=\"100%\" color=\"inherit\" />\n                        }\n                        wallet={wallet}\n                        key={index}\n                      />\n                    );\n                  })}\n                </div>\n              );\n            }\n\n            return null;\n          })}\n        </>\n      ) : (\n        <p className=\"wallets__not-wallet\">No wallets</p>\n      )}\n    </div>\n  );\n};\n","import { IoIosArrowDown } from 'react-icons/io';\nimport { useState } from 'react';\nimport './index.css';\n\nexport const Dropdown = (props) => {\n  const { list } = props;\n  const [dropdownIsOpen, setDropdownIsOpen] = useState(false);\n\n  const onClick = () => {\n    if (list.length === 1) return;\n\n    setDropdownIsOpen(!dropdownIsOpen);\n  };\n\n  return (\n    <div\n      className={`dropdown ${dropdownIsOpen ? 'open' : ''}`}\n      onClick={onClick}\n    >\n      {list.length === 1 ? (\n        <div className=\"dropdown__list\">\n          <div>{list[0]}</div>\n        </div>\n      ) : (\n        <div className=\"dropdown__list many\">\n          {list.map((item, index) => {\n            return (\n              <div\n                className={`dropdown__item ${index ? 'hidden' : ''}`}\n                key={index}\n              >\n                {item}\n              </div>\n            );\n          })}\n        </div>\n      )}\n\n      {!dropdownIsOpen && <IoIosArrowDown size=\"1.1rem\" color=\"var(--color)\" />}\n    </div>\n  );\n};\n","export const DropdownItem = (props) => {\n  const { ticker, address } = props;\n\n  return (\n    <div className=\"dropdown-item\">\n      <span className=\"dropdown-item__ticker\">{ticker}</span>\n      <span className=\"dropdown-item__address\">{address}</span>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport './index.css';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\nimport { Dropdown } from '../../components/Dropdown';\nimport { DropdownItem } from './DropdownItem';\n\nexport const Transfer = (props) => {\n  const { wallets } = props;\n  const [isLoading, setIsLoading] = useState(false);\n\n  const arrOfWallets = Object.keys(wallets).reduce((acc, key) => {\n    return [...acc, ...wallets[key]];\n  }, []);\n\n  const dropdownList = arrOfWallets.map((item) => {\n    return <DropdownItem ticker={item.ticker} address={item.address} />;\n  });\n\n  const submitTx = async () => {\n    setIsLoading(true);\n\n    function timeout() {\n      return new Promise((resolve) => setTimeout(resolve, 2000));\n    }\n\n    await timeout();\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"transfer\">\n      <h2 className=\"page-title\">TRANSFER</h2>\n\n      <Dropdown list={dropdownList} />\n\n      <div className=\"transfer__form-wrapper\">\n        <div className=\"transfer__input-wrapper\">\n          <Input type=\"address\" />\n          <Input type=\"amount\" />\n        </div>\n\n        <Button isLoading={isLoading} onClick={submitTx}>\n          SEND\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import './index.css';\n\nexport const Notification = (props) => {\n  const { setShowNotification } = props;\n\n  const closeNotification = () => {\n    setShowNotification(true);\n  };\n\n  return (\n    <div className=\"notification\">\n      <div className=\"notification__body\">Notification text...</div>\n      <button\n        className=\"notification__close-button\"\n        onClick={closeNotification}\n      >\n        Close\n      </button>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport './App.css';\nimport { saveUserData } from '../common/data';\nimport { ErrorBoundary } from '../components/ErrorBoundary';\nimport { Settings } from './Settings';\nimport { Navigation } from '../components/Navigation';\nimport { Wallets } from './Wallets';\nimport { Transfer } from './Transfer';\nimport { Notification } from '../components/Notification';\n\nexport const App = () => {\n  // Notifications ================================\n  const [showNotification, setShowNotification] = useState(false);\n\n  // Default theme ================================\n  const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');\n  const localStorageDark = window.localStorage.getItem('dark');\n  const darkThemeIsActive = localStorageDark\n    ? localStorageDark === 'true'\n    : prefersDarkScheme.matches;\n  const [isDark, setIsDark] = useState(darkThemeIsActive);\n\n  // Default page =================================\n  const localStoragePage = window.localStorage.getItem('page');\n  const defaultPage = localStoragePage ? localStoragePage : 'wallet';\n  const [activePage, setActivePage] = useState(defaultPage);\n\n  // Wallets =============================\n  const strWallets = window.localStorage.getItem('wallets') || '{}';\n  const localStorageWallets = JSON.parse(strWallets);\n  const [wallets, setWallets] = useState(localStorageWallets);\n\n  function onLogout(event) {\n    event.preventDefault();\n    delete event['returnValue'];\n\n    saveUserData({\n      name: 'wallets',\n      data: JSON.stringify(wallets),\n    });\n  }\n\n  if (typeof window !== 'undefined') {\n    window.addEventListener('beforeunload', onLogout);\n  }\n\n  function setWallet(params) {\n    const { name, wallet } = params;\n    const walletsByName = wallets[name] || [];\n\n    setWallets({\n      ...wallets,\n      [name]: [...walletsByName, wallet],\n    });\n  }\n\n  return (\n    <div className={`App ${isDark ? '' : 'light'}`}>\n      <div className=\"App-body\">\n        <ErrorBoundary>\n          <>\n            {showNotification && (\n              <Notification setShowNotification={setShowNotification} />\n            )}\n\n            <div className=\"App-body__page-wrapper\">\n              {activePage === 'wallet' && <Wallets wallets={wallets} />}\n              {activePage === 'transfer' && <Transfer wallets={wallets} />}\n              {activePage === 'settings' && (\n                <Settings\n                  setWallets={setWallets}\n                  setWallet={setWallet}\n                  setActivePage={setActivePage}\n                />\n              )}\n            </div>\n\n            <header>\n              <Navigation\n                setActivePage={setActivePage}\n                setIsDark={setIsDark}\n                isDark={isDark}\n              />\n            </header>\n          </>\n        </ErrorBoundary>\n      </div>\n    </div>\n  );\n};\n","export function saveUserData(params) {\n  const { name, data } = params;\n\n  window.localStorage.setItem(name, data);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './pages/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}